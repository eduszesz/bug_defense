pico-8 cartridge // http://www.pico-8.com
version 33
__lua__
--bug defense
--by eduszesz
--game off game jam 2021


function _init()
	initialize()
	title_screen()
	music(0,0,1)	
end

function update_game()
	t+=1
	set_processor()
	set_terminals()
	set_waves()
	set_enemies()
		
	if btnp(0) then c.x-=8 end
	if btnp(1) then c.x+=8	end
	if btnp(2) then c.y-=8	end
	if btnp(3) then c.y+=8	end
	
	if c.x<stagex[s_c] then
	 c.x=stagex[s_c]
 end
	if c.y<stagey[s_c] then
	 c.y=stagey[s_c]
	end
	if c.x>120+stagex[s_c] then
		c.x=120+stagex[s_c]
	end
	if c.y>120+stagey[s_c] then
		c.y=120+stagey[s_c]
	end
	
	if btnp(4) and selected then
		set_tower()
	end
	
	if btnp(4) and not selected then
		select_tower()
		sfx(2)
	end
	
	if btnp(5) then
		selected=false
		sfx(4)
	end
	
	fire_bullets()
	fire_e_bullets()
	fire_laser()
	set_lasers()
	move_bullets()
	
	col_bullets()
	col_lasers()
	set_explosions()
	set_trap()
	set_hold_tower(16,27)
	slow_enemies()
	exit_enemies()
	for e in all(enemies) do
		immortal(e,45)
	end
	for te in all(terminals) do
		immortal(te,90)
	end
	if t%150==0 then
		check_win()	
	end
	move_enemies()
	fix_bugs()
	dofloats()
	destroy_towers()
	have_no_funds()
end

function draw_game()
	cls()
	pal(14,0)
	map()
	camera(stagex[s_c],stagey[s_c])
	checkfade()
	
	if t%1==0 then
		p_c+=1
	end
	if p_c>4 then
		p_c=1
	end
	
	if p_c<3 then
				psp=76
	else
				psp=78	
	end
	
	if p_c%2==0 then
		flipx=true
	else
		flipx=false
	end
	
	spr(psp,p_x,p_y,2,2,flipx)
	
	for e in all(enemies) do
		if t%16<8 then
			e.sp=e.isp
			if e.imm then 
				e.sp=127
			end
		else
			e.sp=e.isp+1
		end
		spr(e.sp,e.x,e.y,1,1,e.dirx)
		if e.imm then
			line(e.x,e.y,e.x+5,e.y,8)
			line(e.x,e.y,(e.x+e.h),e.y,11)
		end
	end
		
	if fget(mget(c.x/8,c.y/8),0) then
		c.sp=2
	else
		if selected then
			c.sp=3
		else	
			c.sp=1
		end	
	end
	
		
	spr(c.sp,c.x,c.y)
	
	for tw in all(towers) do
		
		if t%16==0 then
			tw.c+=1
		end
		
		if tw.c>4 then
			tw.c=1
		end
		
		if tw.isp==5 or tw.isp==7 
		 or tw.isp==14 or tw.isp==28 then
			if tw.c<3 then
				tw.sp=tw.isp
			else
				tw.sp=tw.isp+1	
			end 
			
			if tw.c%2==0 then
				flipx=true
			else
				flipx=false
			end
		end
		
		if tw.isp==10 then
			tw.sp=tw.c+9
			flipx=false
		end
		
	
		spr(tw.sp,tw.x,tw.y,1,1,flipx)
		if tw.isp==5 or tw.isp==10 or tw.isp==28 then
			line(tw.x,tw.y-1,tw.x+tw.ih,tw.y-1,8)
			line(tw.x,tw.y-1,(tw.x+tw.h),tw.y-1,11)
		end	
	end
	
	for b in all(bullets) do
		spr(b.sp,b.x,b.y)
	end
	
	for ex in all(explosions) do
  circ(ex.x,ex.y,ex.t/2,8+ex.t%3)
 end
 
 for l in all(lasers) do
  line(l.ix,l.iy,l.fx,l.fy,8+l.t%3)
 end
	
	print("bugs fixed "..b_fix,stagex[s_c]+8,stagey[s_c]+1,11)
	
	
	for te in all(terminals) do
		if t%16<8 then
			te.sp=30
		else
			te.sp=31
		end		
		if te.imm then
			line(te.x,te.y-2,te.x+5,te.y-2,8)
			line(te.x,te.y-2,(te.x+te.h),te.y-2,11)
		end
		spr(te.sp,te.x,te.y)
	end
	
	for f in all(float) do
		print(f.txt,f.x,f.y,f.c)
	end
	
	show_cost()
	wave_alert()
	
	spr(50,stagex[s_c]+8,stagey[s_c]+8)
	spr(50,stagex[s_c]+16,stagey[s_c]+8)
	spr(50,stagex[s_c]+24,stagey[s_c]+8)
	
	for j=1,lives do
		spr(49,stagex[s_c]+(8*j),stagey[s_c]+8)
	end
	
	if win then
		rectfill2(stagex[s_c]+23,stagey[s_c]+60,82,10,6)
		rectfill2(stagex[s_c]+24,stagey[s_c]+61,80,8,0)
		print("level cleared",stagex[s_c]+25,stagey[s_c]+62,7)
	end
	
end

function find_path()
	for x=0,128 do
		for y=0,16 do
			if mget(x,y)>21 and mget(x,y)<26 then
				add(pathx,x*8)
				add(pathy,y*8)
			end
		end
	end
	for x=0,128 do
		for y=16,32 do
			if mget(x,y)>21 and mget(x,y)<26 then
				add(pathx,x*8)
				add(pathy,y*8)
			end
		end
	end
end

function select_tower()
	local tile=mget(c.x/8,c.y/8)
	if fget(tile,7) then
		t_typ=tile
		selected=true
	end
end

function set_tower()
	local cost=set_cost(t_typ)
	local h=7
	if t_typ==10 or t_typ==28 then
		h=4
	end
	if c.sp==3 and c.y>8 and 
		b_fix>=set_cost(t_typ) then
			local tw={
											x=c.x,
											y=c.y,
											sp=t_typ,
											isp=t_typ,
											flipx=false,
											c=1,
											t=0,
											h=h,
											ih=h,
											b=cost,
											box={x1=0,y1=0,x2=7,y2=7}
											}
			if t_typ==30 then								
				mset(c.x/8,c.y/8,30)
			else
				add(towers,tw)
				mset(c.x/8,c.y/8,33)
			end	
			b_fix-=cost
			sfx(1)						
		else
			no_funds=true
		end
end

function have_no_funds()
	if no_funds then
		local dx=14
		if c.x<stagex[s_c]+14 then dx=8 end
		if c.x>stagex[s_c]+100 then dx=28 end
		addfloat("can't do!",c.x-dx,c.y,8)
		sfx(3)
		no_funds=false
	end
end

function fire_bullets()
	
	for tw in all(towers) do
		for e in all(enemies) do
			local d=distance(e.x,e.y,tw.x,tw.y)
			local drcx,drcy=1,1
			if t%8==0 and tw.isp==5 and d<32 then
				if tw.c==1 then drcx,drcy=-1,-1 end			
				if tw.c==2 then drcx,drcy=1,-1 end			
				if tw.c==3 then drcx,drcy=1,1 end			
				if tw.c==4 then drcx,drcy=-1,1 end
				local b={
											sp=9,
											x=tw.x+3+drcx,		
											y=tw.y+3+drcy,
											px=tw.x+3+drcx,		
											py=tw.y+3+drcy,
											dx=drcx,
											dy=drcy,
											wf=tw.sp,
											box = {x1=0,y1=0,x2=1,y2=1},
											}		
				add(bullets,b)
			end
			if t%16==0 and tw.isp==28 
				and d<32 then 
				add_bullets(e,tw)	
			end
		end	
	end
end

function move_bullets()
	for b in all(bullets) do
		b.x+=b.dx
		b.y+=b.dy
		if distance(b.x,b.y,b.px,b.py)>32 then
			del(bullets,b)
		end	
	end
end

function col_bullets()
	for b in all(bullets) do
		for e in all(enemies) do
			if coll(e,b) and b.wf<33 
			and not e.imm then
				e.imm=true
				e.h-=1
				del(bullets,b)
				sfx(0)	
			end
			if e.h<0 then
				del(enemies,e)
				explode(e.x+4,e.y+4)
			end
		end

		for te in all(terminals) do
			if coll(te,b) and b.wf>33 
				and not te.imm then
				te.imm=true
				te.h-=1
				del(bullets,b)
				sfx(0)
			end
			if te.h<0 then
				explode(te.x+4,te.y+4)
				mset(te.x/8,te.y/8,48)
				del(terminals,te)
			end
		end
	end
end

function col_lasers()
	for l in all(lasers) do
		for e in all(enemies) do
			if coll(e,l) 
			and not e.imm then
				e.imm=true
				e.h-=1
				sfx(0)
			end
			if e.h<0 then
				del(enemies,e)
				explode(e.x+4,e.y+4)
			end
		end
	end
end

function set_enemies()
	local len=2+wave
	local isp,s,is,h=34,30,30,5
	
		if s_c>1 then
			len=3+wave
			if n_e>len-2 then
				--slug
				isp=36
				s=45
				is=45
				h=3
			end 
		end
		if s_c>2 then
			len=4+wave
			if n_e>2 and #enemies<4 then
				--centipede
				isp=38
				s=30
				is=30
				h=5
			end
		end
		if s_c>3 then
			--scorpion
			len=5+wave
			if n_e<len-1 and rnd()<0.25 then
					isp=40
					s=30
					is=30
					h=6
			end
		end
		if s_c>4 then
			--flies
			len=6+wave
			if n_e==0 then
				isp=42
				s=25
				is=25
				h=3
			end
			if n_e==1 then
				isp=42
				s=25
				is=25
				h=3
			end
		end
		
	
	
	local e={
								x=pathx[s_c],
								y=pathy[s_c],
								dx=0,
								dy=0,
								sp=isp,
								isp=isp,
								h=h,
								t=0,
								s=s,
								is=is,
								dirx=false,
								imm=false,
								box={x1=0,y1=0,x2=7,y2=7},}
			
	if	set_e and t%60==0 then						
		add(enemies,e)
		n_e+=1							
	end		

	if n_e==len then 
		set_e=false
		n_e=0
	end
end

function move_enemies()
	for e in all(enemies) do
		local tile=mget(e.x/8,e.y/8)
		if fget(tile,1) then e.dx,e.dy=1,0 end
		if fget(tile,2) then e.dx,e.dy=0,-1 end
		if fget(tile,3) then e.dx,e.dy=0,1 end
		if fget(tile,4) then e.dx,e.dy=-1,0 end
		
		if e.dx<0 then
		 e.dirx=true 
		else
			e.dirx=false
		end
		
		if t%e.s==0 then
			e.x+=e.dx*8
			e.y+=e.dy*8
		end	
	end
end

function addfloat(_txt,_x,_y,_c,_ty)
	if _ty==nil then _ty=10 end
 add(float,{txt=_txt,x=_x-1,y=_y,c=1,ty=_y-_ty,t=0})
 add(float,{txt=_txt,x=_x+1,y=_y,c=1,ty=_y-_ty,t=0})
 add(float,{txt=_txt,x=_x,y=_y,c=_c,ty=_y-_ty,t=0})
end

function dofloats()
 for f in all(float) do
  f.y+=(f.ty-f.y)/10
  f.t+=1
  if f.t>70 then
   del(float,f)
  end
 end
end


function rectfill2(_x,_y,_w,_h,_c)
 --★
 rectfill(_x,_y,_x+max(_w-1,0),_y+max(_h-1,0),_c)
end


function distance(x1,y1,x2,y2)
	local dx=(x2-x1)
	local dy=(y2-y1)
	if abs(dx)>160 then dx=160 end
	return sqrt(dx*dx+dy*dy)
end

function abs_box(s)
 local box = {}
 box.x1 = s.box.x1 + s.x
 box.y1 = s.box.y1 + s.y
 box.x2 = s.box.x2 + s.x
 box.y2 = s.box.y2 + s.y
 return box

end

function coll(a,b)
 
 local box_a = abs_box(a)
 local box_b = abs_box(b)
 
 if box_a.x1 > box_b.x2 or
    box_a.y1 > box_b.y2 or
    box_b.x1 > box_a.x2 or
    box_b.y1 > box_a.y2 then
    return false
 end
 
 return true 
  
end

function immortal(a,i)
	if a.imm then
  a.t += 1
  if a.t >i then
   a.imm,a.t=false,0
  end
 end
end

function explode(x,y)
 add(explosions,{x=x,y=y,t=0})
 sfx(0)
end

function set_explosions()
	for ex in all(explosions) do
  ex.t+=1
  if ex.t == 13 then
   del(explosions, ex)
  end
 end
end

function fire_laser()
 for tw in all(towers) do
 	for e in all(enemies) do
			if tw.isp==10 and t%60<4 then
				local vx,vy=e.x+4,e.y+4
				local d=distance(vx,vy,tw.x,tw.y)
	 		if d<32 then	
					local l={
											x=vx,
											y=vy,
											ix=tw.x+4,		
											iy=tw.y+4,
											fx=vx,
											fy=vy,
											t=0,
											box = {x1=0,y1=0,x2=1,y2=1},
											}
		 		add(lasers,l)
		 	end	
	 	end
	 end
	end 
end

function set_lasers()
	for l in all(lasers) do
  l.t+=1
  if l.t == 13 then
   del(lasers,l)
  end
 end
end

function set_trap()
	for tw in all(towers) do
		if tw.isp==7 then
			for e in all(enemies) do
				if distance(tw.x,tw.y,e.x,e.y)<10 then
					if e.isp==38 then
						explode(tw.x+4,tw.y+4)
						mset(tw.x/8,tw.y/8,48)
						addfloat("failed!",tw.x,tw.y,8)
						del(towers,tw)
					else
						explode(tw.x+4,tw.y+4)
						mset(tw.x/8,tw.y/8,48)
						del(towers,tw)
						del(enemies,e)
						explode(e.x+4,e.y+4)	
					end	
				end
			end
		end
	end
end

function set_hold_tower(_i,_f)
	local ini,fin=_i,_f
	local ax={1,-1,0,0,1,-1,-1,1}
	local ay={0,0,1,-1,1,-1,1,-1}
	for tw in all(towers) do
		if tw.isp==14 then
			local twx,twy=tw.x/8,tw.y/8
			for i=1,8 do
				if mget(twx+ax[i],twy+ay[i])==ini then
					mset(twx+ax[i],twy+ay[i],fin)
				end
			end
		end
	end
end

function slow_enemies()
	if #enemies>0 then	
		for e in all(enemies) do
			if mget(e.x/8,e.y/8)==27 
				and e.isp<42 then
				e.s=e.is+30
			else	
				e.s=e.is
			end
		end
	end	
end

function exit_enemies()
	for e in all(enemies) do
		if mget(e.x/8,e.y/8)==26 then
			del(enemies,e)
			sfx(13)
			lives-=1
		end
	end
end

function check_win()
	local sc=s_c
	if not win and #enemies==0 
		and wave==3 then
		win=true
		initialize()
		s_c=(1+sc)
		if s_c>8 then s_c=1 end
		fadeout()
	end
	if lives<1 then
		fadeout()
		game_over()
	end
end

function reset_map()
	b_fix=40
	for x=0,128 do
		for y=0,128 do
			if mget(x,y)==27 then
				mset(x,y,16)
			end
			if mget(x,y)==33 then
				mset(x,y,48)			end
		end
	end
	if p_x!=nil and p_y!=nil then
		mset(p_x/8,p_y/8,46)
	end
	wave=0
end

function set_waves()
	if t%30==0 and (not set_e) 
		and #enemies==0 then
		wave_t+=1
	end
	
	if wave_t==40 then
		wave_t=0
		set_e=true
		wave+=1
	end
end

function wave_alert()
	local co=flr(rnd(15))
	if wave_t>30 and wave_t<40 then	
		rectfill2(stagex[s_c]+23,stagey[s_c]+60,82,10,6)
		rectfill2(stagex[s_c]+24,stagey[s_c]+61,80,8,0)
		print("the bugs are coming!",stagex[s_c]+25,stagey[s_c]+62,co)
		if t%60==0 then
			sfx(5)
		end
	end
end

function fix_bugs()
	for te in all(terminals) do	
		if t%te.s==0 then
			b_fix+=10
			addfloat("bug fixed",te.x-14,te.y,11)
		end
	end	
end

function set_cost(_t_typ)
	local b_cost=10
	local typ=_t_typ
	if typ==7 then b_cost=20 end
	if typ==10 then b_cost=40 end
	if typ==14 then b_cost=25 end
	if typ==28 then b_cost=30 end	
	if typ==30 then b_cost=40 end	
	return b_cost
end

function show_cost()
	local tile=mget(c.x/8,c.y/8)
	local cost=set_cost(tile)
	if fget(tile,7) and
		c.y<stagey[s_c]+8 then
		print(cost,c.x-1,c.y+10,2)
		print(cost,c.x+1,c.y+10,2)
		print(cost,c.x,c.y+11,2)
		print(cost,c.x,c.y+9,2)
		print(cost,c.x,c.y+10,7)
	end
end

function destroy_towers()
	local d,h=9,1
	for tw in all(towers) do
		for e in all(enemies) do
			if e.isp==36 then d,h=18,2 end
			if t%e.s==0 and tw.isp!=14 and 
				distance(tw.x,tw.y,e.x,e.y)<d then
				tw.h-=h
				explode(tw.x+4,tw.y+4)
			end
		end
		if tw.h<1 then
			explode(tw.x+4,tw.y+4)
			mset(tw.x/8,tw.y/8,48)
			set_hold_tower(27,16)
			del(towers,tw)
		end
	end
end

function set_terminals()
	local xi=stagex[s_c]/8
	local xf=16+stagex[s_c]/8
	local yi=1+stagey[s_c]/8
	local yf=16+stagey[s_c]/8
	for x=xi,xf do
		for y=yi,yf do
			if mget(x,y)==30 then
				local te=
										{x=x*8,
										y=y*8,
										sp=30,
										t=0,
										h=5,
										imm=false,
										s=flr(rnd(500))+400,
										box={x1=0,y1=0,x2=7,y2=7}}
				add(terminals,te)
				mset(x,y,33)
			end
		end
	end
end

function fire_e_bullets()
	for e in all(enemies) do
		if e.isp==40 then
			for te in all(terminals) do
				local d=distance(e.x,e.y,te.x,te.y)
				if d<32 and t%30==0 then
					add_bullets(te,e)
				end 
			end
		end	
	end
end

function add_bullets(_ta,_wf)
	local wf,ta=_wf,_ta
		local vx,vy=ta.x-wf.x,ta.y-wf.y
				local mod=sqrt(vx*vx+vy*vy)
				local b={
										sp=9,
										x=wf.x+4,		
										y=wf.y+4,
										px=wf.x+4,		
										py=wf.y+4,
										dx=vx/mod,
										dy=vy/mod,
										wf=wf.sp,
										box = {x1=0,y1=0,x2=1,y2=1},
										}		
			add(bullets,b)
end

function set_processor()
	local xi,yi=stagex[s_c]/8,stagey[s_c]/8
	local xf,yf=xi+15,yi+15
	for x=xi,xf do
		for y=yi,yf do
			if mget(x,y)==46 then
				p_x,p_y=x*8,y*8
				mset(x,y,33)
				mset(x+1,y,33)
				mset(x,y+1,33)
				mset(x+1,y+1,33)
			end
		end
	end
end


function set_enemies_title()
	for x=-104,184,8 do
		add(e_title,x+8)
	end
end


function game_over()
	_update=update_over
	_draw=draw_over
end

function update_over()
	t+=1
	if btnp(4) then
		initialize()
		fadeout()
		_update=update_title
		_draw=draw_title
	end
end

function draw_over()
	cls()
	pal(14,0)
	map()
	camera()
	checkfade()
	rectfill2(8,16,112,104,0)
	rectfill2(0,0,128,7,0)
	sspr(0,40,30,16,12,20,90,45)	
	if t%16<4 then
		print("press 🅾️ to play again",20,98,11)
	else
		print("press 🅾️ to play again",20,98,7)
	end
	
end

function title_screen()
	_update=update_title
	_draw=draw_title
end

function update_title()
	t+=1
	
	if t%30==0 then
		e_i+=1
		if e_i>24 then e_i=1 end
	end
	
	if btnp(4) then
		fadeout()
		_update=update_game
		_draw=draw_game
	end
end

function draw_title()
	cls()
	pal(14,0)
	map()
	camera(0,8)
	checkfade()
	rectfill2(8,16,112,104,0)
	rectfill2(0,128,128,7,0)
	sspr(32,40,86,16,13,20,160,50)	
	for x=1,14 do
		spr(48,x*8,72)
		spr(16,x*8,80)
		spr(48,x*8,88)
	end
	
	for x=3,12,2 do
		local sp=31
		if t%16<8 then sp=32 end
		spr(sp+x,e_title[e_i]+x*8,80)
		
	end
	
	if t%16<8 then
		print("press 🅾️ to play",32,98,11)
	else
		print("press 🅾️ to play",32,98,7)
	end
	
	print("by eduszesz",9,114,1)
	print("by eduszesz",10,114,11)
	
end

function initialize()
	t=0
	p_c=1
	n_e=0
	lives=3
	b_fix=40
	no_funds=false
	s_cost=true
	
	-- required for fade
	dpal={0,1,1,2,1,13,6,4,4,9,3,13,1,13,14}
	fadeperc=1
	--------------------------------
	enemies={}
	e_title={}
	e_i=1
	float={}
	pathx={}
	pathy={}
	towers={}
	terminals={}
	bullets={}
	lasers={}
	explosions={}
	selected=false
	t_typ=0
	s_c=1 --stage counter
	stagex={0,128,256,384,512,640,768,896,0,128,256,384,512,640,768,896}
	stagey={0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128}
	wave_t=0 --time between waves
	wave=0
	s_alert=false	
	c={
		x=stagex[s_c],
		y=stagey[s_c],
		sp=2}
			
	find_path()
	set_e=false	
	lose=false
	win=false
	reset_map()
	set_enemies_title()
end

function dofade()
 local p,kmax,col,k=flr(mid(0,fadeperc,1)*100)
 for j=1,15 do
  col = j
  kmax=flr((p+(j*1.46))/22)
  for k=1,kmax do
   col=dpal[col]
  end
  pal(j,col,1)
 end
end

function checkfade()
 if fadeperc>0 then
  fadeperc=max(fadeperc-0.04,0)
  dofade()
 end
end

function wait(_wait)
 repeat
  _wait-=1
  flip()
 until _wait<0
end

function fadeout(spd,_wait)
 if (spd==nil) spd=0.04
 if (_wait==nil) _wait=0
 repeat
  fadeperc=min(fadeperc+spd,1)
  dofade()
  flip()
 until fadeperc==1
 wait(_wait)
end


__gfx__
000000007700007788000088bb0000bb000000008000000000000000000000000088880090000000000000000000000000000000000000000000000000000000
000000007000000780000008b000000b000000000800000000000000000000000800008000000000000570000005500000055000000550000500005000000000
0070070000000000000000000000000000000000008222000022220000088000800000080000000000666600006666000066660000666600000dd000005dd500
00077000000000000000000000000000000000000025420000254200008a680080066008000000000565865005685650056586500568565000d16d0000d16d00
00077000000000000000000000000000000000000024520000245200008668008006a008000000000568565005658670056856500765865000d61d0000d61d00
0070070000000000000000000000000000000000002222000022280000088000800000080000000000666600006666000066660000666600000dd000005dd500
000000007000000780000008b000000b000000000000000000000080000000000800008000000000000550000005500000057000000550000500005000000000
000000007700007788000088bb0000bb000000000000000000000008000000000088880000000000000000000000000000000000000000000000000000000000
eeeeeeee06666660000000e00e0000000e0000000e000000beeeeeebbeeeeeebbeeeeeebbeeeeeeb8eeeeee80000000000000000000000000666666006666660
eeeeeeee61111115eeeeeeeeeee000000e000000eeeeeeeeeee0eeeeeeee0eeeeee0eeeeee0eeeeeeeeeeeee05000050000000000600006056cccc6556cccc65
eeaaaaee6111111500aaaae00eaaaa000eaaaa000eaaaa00eeee0eeeeee000eeeee0eeeee0eeeeeeeeeeeeee000550000085500000055000567ccc6556bccc65
eeaaaaee6111111500aaaa000eaaaa000eaaaa0000aaaa00000000eeee0e0e0ee0e0e0ee000000eeeeeeeeee00568500005875000057750056cccc6556cccc65
eeaaaaee6111111500aaaa000eaaaa000eaaaa0000aaaa00eeee0eeeeeee0eeeee000eeee0eeeeeeeeeeeeee0058650000577500005785000666666006666680
eeaaaaee6111111500aaaa000eaaaa000eaaaa0000aaaa00eee0eeeeeeee0eeeeee0eeeeee0eeeeeeeeeeeee0005500000055000000558006f5f5f5665f5f5f6
eeeeeeee61111115000000000e000000eee0000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee05000050000000000600006065f5f5f66f5f5f56
eeeeeeee05555550000000000e0000000e00000000000000beeeeeebbeeeeeebbeeeeeebbeeeeeeb8eeeeee80000000000000000000000006666666666666666
bb0000bb0eeeeee0000000000000000000000000000000000000000000000000000000004480000000666000000000000655556000a000000000000000000000
b000000beeeeeeee00b000b0b000b00000044000000000000000000000000000044800004000000000116300006663000666666000066666000aa00000000000
00000000eeeeeeee0b535b400b355b00004b4b000000000002020202202020204000544540504000001bbb80001bbb8006666660000666650111111100000000
00000000eeeeeeee00bbb80000bbb840044b4b48000000000212121221212120041414104014144500bbbbb000bbbbb00666666000a666650165656500000000
00000000eeeeeeee00bbb80000bbb8400b4111484b4b4b480222228002222280004444b0044444b0001b6b80001b6b800666666000a66665a165656500000000
00000000eeeeeeee0b355b400b535b000b4111114b4b4b48212121200212121200415410004114450011630000666300a00aa00a00066665a165656500000000
b000000beeeeeeeeb000b00000b000b0000000000111111020202020020202020400044505040000006660000000000000000000000666660165656500000000
bb0000bb0eeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000165656500000000
0000000000000000000000000a00a00aa00a00a00333333333333330a16661a0001110003331330003333300000000000000000000aa00000000aa0000000000
0300003000020200000202000111111111111110333333333333333301111100a11111a033313300333133000000000000000000000110000001100000000000
00000000002828200026262011111116611111113311333333533333011111000111110033333a0033333a00000000000000000000099000000ff00000000000
00000000008888800066666011111116611111113311331133533313a11111a0011111003333330033333300062002600198cf1000088000000cc00000000000
0000000000288820002666201111111661111111333333333333333301111100a11111a033113a0033333a0002200220a198cf1a000cc0000008800000000000
00000000000282000002620001111111111111103a3a3a333a3a3a330111110001111100331133003355330002200220a000000a000ff0000009900000000000
0300003000002000000020000a00a00aa00a00a00000000000000000a11111a00111110033333a0033333a000aa00aa000000000000110000001100000000000
0000000000000000000000000000000000000000000000000000000000111000a16661a003333300333333000a0000a00000000000aa00000000aa0000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa0000aa00000000aa0000aa0000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111100111111111111110
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001555555666666100166666666666610
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001555555666666100166666666666610
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a15555556666661aa16666666666661a
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a15555556666661aa16666666666661a
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001555555666666100166666666666610
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666666666100166666655555510
00888000088888000180018001888800000000000000000001bbbb0001b00b0000bbb000000000000000000000000000a16666666666661aa16666665555551a
01800000088008000180018001800000000000000000000001b00b0001b00b0001b00000000000000000000000000000a16666666666661aa16666665555551a
01808000088008000188018001888800000000000000000001bbb00001b00b0001b0b00000000000000000000000000001666666666666100166666655555510
01801800088888000180808001800000000000000000000001b01b0001b00b0001b01b0000000000000000000000000001666666666666100166666655555510
01801800088018000180808001800000000000000000000001b01b0001b00b0001b01b0000000000000000000000000001111111111111100111111111111110
00888000088018000180808001888800000000000000000001bbb000001bbb0000bbb0000000000000000000000000000000aa0000aa00000000aa0000aa0000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088800001800800018888000188880001bbb00001bbbb0001bbbb0001bbbb000bb00b000000bbb001bbbb000000000000000000000000000000000000000000
0180080001800800018000000180080001b00b0001b0000001b0000001b000000bb00b00000b111001b000000000000000000000000000000000000000000000
0180080001800800018888000188800001b00b0001bbbb0001bbbb0001bbbb000bbb0b000000b00001bbbb000000000000000000000000000000000000000000
0180080001800800018000000180180001b0bb0001b0000001b0000001b000000bb0bb0000001b0001b000000000000000000000000000000000000000000000
0180080001880800018000000180180001b0bb0001b0000001b0000001b000000bb01b0000111b0001b000000000000000000000000000000000000000000000
0088800000188000018888000180180001bbb00001bbbb0001b0000001bbbb000bb01b0000bbb00001bbbb000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002b0b0000bbb00002b00b000000000002b000b0002b00000bb00b00000000000000000000000000000000000000000000000000000000000000000000000000
002b0b0002b00b0002b00b000000000002b000b0002b00000bb00b00000000000000000000000000000000000000000000000000000000000000000000eeee00
002b0b0002b00b0002b00b000000000002b0b0b0002b00000bbb0b00000000000000000000000000000000000000000000000000000000000000000000eeee00
002bb00002b00b0002b00b000000000002b0b0b0002b00000bb0bb00000000000000000000000000000000000000000000000000000000000000000000eeee00
0002b00002b00b0002b00b000000000002bbb0b0002b00000bb02b00000000000000000000000000000000000000000000000000000000000000000000eeee00
0002b00000bbb000002bbb0000000000002bbb00002b00000bb02b00000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000800080000080000000800001010305091103050911010180008000000100000000000000000000010101000000000101010101010101010101010000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000050000000000000000000000000000000507000000000000000000000000000005070a0000000000000000000000000005070a0e00000000000000000000000005070a0e1c000000000000000000000005070a0e1c1e0000000000000000000005070a0e1c1e0000000000000000000005070a0e1c1e0000
11111111111111111111111111111111111111111811111111111111111111111111111118111111111111111a1111111111111111111111111111181111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111118111111111111111111111111
1130303030303030303030302c2c2c111130303e103d30303030303030302d11113014101530302c2c2c303010303011113030303030302c2c2c301030303011112c2c2c30303030303030301210101a161430303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130303030303030303c3c3b3030301111303030103030303030303030302d11113e103d3030303030303030103030111130303030303030303030103030301111303030303030303030303010303011111030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130301210101430303030303030301111303030103030303030303030302d1111301030303033343030303010303011113030303014101010101015303b3b1111303030303030303030303010303011111030303030303030303030303030111130303030303030303030303030301111303030301111303030303030303011
113030103030103030302e30303030111130303e103d3030303033343030301111301030303030303a303030103030111135363030103030303030303c3c3c1111303030121010101010101013303011111030303030303030303030303030111130303030303030303030303030301111303030110000113030303030303011
113a301030301030303030303030301111303030103030303030303038303011113e103d3030303039303030103030111130303030103030303030303030301111303030103a33343030303030303011111210101430303030303030303030111130303030303030303030303030301111303030110000113030303030303011
1139301030301030303d30303d3030111130303e103d30303b30303037303011113010303030333430303030103030111130303030103030121010101010101a11303b30103930303030303030303011113030301030301130303030303030111130303030303030303030303030301111303030301111303030303030303011
11303010303010303030303030303011113030301030303030303536353630111130103030302e303a303030103030111135363030103030131010101530301111303b3010113334301e302e30303011113030301030113030303030303030111130303030301111113030303030301111303030110000113030303030303011
113030103030103030303035363030111a101010101010101530303030303011113e103d30303030393b3b3010303011113030303010302e303030301030301111303b301030303d3030303030303011113030301011301130303030303030111130303030303030113030303030301111303030110000113030303030303011
1610101330301030301210101010101a1130303b1030303010303b30303030111130103030303334303c3c30103030111130303030103030303030121330301111303030101133343030303030303011113030301011301e11303030303030111130303030303011303030303030301111303030301111303030303030303011
113030303030103030103011303030111130303010302e3010303030303030111130103030303030303030301030301111303a3038103030303030103030301111303030131010101010101015303011113014101530111130303030303030111130303030301130303030303030301111303030303030303030303030303011
1130303b30301210101330113030301111303030103030301030303030303011113012101010101010101010133030111130393c3712101010101013303b301111303030303030303030303010303011113010303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
11303030303030303c3030113038301111303030121010101330303030303011113030303030303030303030303030111130301e3830303030303030303b30111130303c3030303c3030303c10303011113012101010101010143030303030111130303030303030303030303030301111303030303030303030303030303011
11301e30303334303c303011303730111130303030303030303030301e3030111130303030303030303030301e30301111303030373030303030303030303011161010101010101010101010133030111130303030303030301210101010101a1130303030303030303030303030301111303030303030303030303030303011
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111117111111111111111a111111111111111111111111111111111a111111
00000000000005070a0e00000000000000000700000000000000000000000000000000070000000000000000000000000000070000000000000000000000000000000700000000000000000000000000000007000000000000000000000000000000070000000000000000000000000000000700000000000000000000000000
1111111111111111111111111111111111111111111111111111111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111118111111111111111111111111111111111a11111111111111111111111111111111111111111811111111111111111111111111111111111111
1130303030303030303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130303030303030303011113030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130301210101430303011113030301111303030113011111130303030303011113030113011303030303030303030111130303011301111303030303030301111303011303011113030303030303011113030303030303030303030303030191130303030303030303030303030301111303030303030303030303030303011
1130301030301030303030113030301111303030113011001130303030303011113030113011303030303030303030111130303011303030113030303030301111303011303030301130303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130301030301030303030113030301111303030113011111130303030303011113030113011303030303030303030111130303011303030113030303030301111303011303030301130303030303011113030113011301130303030303030111130303011301111113030303030301111303011303030301130303030303011
113030103030103030303030303030111130303030303030303030303030301111303030303030303030303030303011113030301130111130303030303030111130301130301111303030303030301111303011301111113030303030303011113030301130113030303030303030111130301130303011303030303030301a
1610101330301214303030301210101a16303030303030303030303030303011111111111130303030303030303030111130303011301111113030303030301111303011303030301130303030303011113030113030301130303030303030111130303011301111113030303030301111303011303011001130303030303011
1130303030303010303030301030301111303030303030303030303030303011111111111630303030303030303030111130303030303030303030303030301111303011303030301130303030303011113030303030303030303030303030111130303011303030113030303030301111303011303011000011303030303011
1130303030303010303030301030301111303030303030303030303030303011111111111130303030303030303030111130303030303030303030303030301a11303011303011113030303030303011113030303030303030303030303030111130303011301111113030303030301111303011303030111130303030303011
1130303030303010303030301030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130303030303010303030301030301111303030303030303030303030303011113030303030303030303030303030111130303011171130303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130303030303012101010101330301111303030303030303030303030303011113030303030303030303030303030111130303011111130303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
1130303030303030303030303030301111303030303030303030303030303011113030303030303030303030303030111130303011111130303030303030301111303030303030303030303030303011113030303030303030303030303030111130303030303030303030303030301111303030303030303030303030303011
111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a11111111111111111111111111111111111111111111111111111111111a1111111111111111111111111111111111111111111a1111111111111111111111111111111711111111111111111111111111
__sfx__
00040000056650a6700866003650016000a000000001a000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001800003f225030003f205030003f20518d0418d0018d0018d0018d0018d0018d0018d0000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000000
000200001657003570000000000000000000000000000000000000000000000000000000000000000000000000000000000000027500000000000000000000000000000000000000000000000000000000000000
000200000c07006751037350070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000300000c57405551005310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000014173007000c1000000000000000001016300700000000000000000000000b15300700000000000000000000000614300700000000000000000000000313300700000000000000000000000112300700
003c0020025400254004540055400454004540055400754005540055400754007540045400454000540005400254002540045400554004540045400554007540055400554007540095400a540095400754009550
001400181861500000000001861518615186151861500000186051861018615000001861500000000001861500000000001861518605186151861518605186150000000000000000000000000000000000000000
003c00201a53526305155351a5351c535000001a5351c5351d5351c5351a535185351a5350000000000000001a5352100521535180051c5350000018535000001a535000001c535000001a535000000000000000
001e00200556005565025550000002555050050556005565025550000002555000000456004560045650000005560055650255500000025550000005560055650255500000025550000007560075600756500000
000f00200c0630000018605000000c0630000000000000000c0630000000000000000c0630000000000000000c0630000000000000000c0630000000000000000c0630000000000000000c063000000000000000
003c00201d1151a1151a1151d1151a1151a1151c1201c1251d1151a1151a1151d1151a1151a1151f1201f1251d1151a1151a1151d1151a1151a1151c1201c1251d1151a1151a1151d1151a1151a1151f1201f125
001e0020091251500009125000050920515000091250000009135000000920500000071300713007135000000912500000091250000009205000000912500000091350000009205000000c2000c2050020000000
010300001b5611e06125061010001a0511d0512405100000197411c7412374100700187301b731227310050000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 06075e60
00 06075e08
00 06074308
00 0907090a
00 0b07090a
02 0c070c44

